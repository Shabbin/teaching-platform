// Base origin (no /api here)
export const API_ORIGIN =
  process.env.NEXT_PUBLIC_API_BASE_URL || "http://localhost:5000";

// Normalize prefix to always start with "/" (or be empty)
const RAW_PREFIX = (process.env.NEXT_PUBLIC_API_PREFIX ?? "/api").trim();
const NORM_PREFIX = RAW_PREFIX
  ? (RAW_PREFIX.startsWith("/") ? RAW_PREFIX : `/${RAW_PREFIX}`)
  : "";

// API base (origin + normalized prefix)
export const API_BASE = API_ORIGIN.replace(/\/+$/, "") + NORM_PREFIX;

// Absolute URL helper (for assets or non-prefixed routes)
export const absUrl = (path) =>
  API_ORIGIN.replace(/\/+$/, "") + "/" + String(path || "").replace(/^\/+/, "");

// Turn a stored DB path like "/uploads/videos/<hash>" into "/videos/<hash>" on the backend origin
export const videoUrlFromStoredPath = (storedPath) => {
  if (!storedPath) return "";
  const file = String(storedPath).split("/").pop(); // "<hash>.mp4" or "<hash>"
  return `${API_ORIGIN.replace(/\/+$/, "")}/videos/${file}`;
};
